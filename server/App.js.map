{"version":3,"sources":["../src/App.tsx"],"names":["q","gqlo","console","log","App","config","query","current","data","loading","cfg","columns","dataIndex","title","width","fixed","tableLayout","bordered","scroll","x","size","rowKey","dataSource","ApolloClient","ssrMode","ssrForceFetchDelay","cache","InMemoryCache","link","HttpLink","uri","fetch"],"mappings":";;;;;;;;;;;;;AAAA;;AAGA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,CAAC,OAAGC,gBAAH,oBAAP;AAUAC,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACAE,OAAO,CAACC,GAAR,CACEH,CAAC,SACCC,gBADD,qBADH;;AAcA,IAAMG,GAAa,GAAG,SAAhBA,GAAgB,GAAM;AAC1BF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,MAAME,MAAM,GAAG,mBAAO;AACpBC,IAAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADe,GAAP,CAAf;;AAH0B,kBAeA,0BAASD,MAAM,CAACE,OAAP,CAAeD,KAAxB,CAfA;AAAA,MAelBE,IAfkB,aAelBA,IAfkB;AAAA,MAeZC,OAfY,aAeZA,OAfY;;AAgB1B,MAAMC,GAAoB,GAAG;AAC3BC,IAAAA,OAAO,EAAE,CACP;AAAEC,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,KAAK,EAAE,IAA5B;AAAkCC,MAAAA,KAAK,EAAE;AAAzC,KADO,EAEP;AAAEF,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAFO,EAGP;AAAED,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,KAAK,EAAE,IAA9B;AAAoCE,MAAAA,KAAK,EAAE,OAA3C;AAAoDD,MAAAA,KAAK,EAAE;AAA3D,KAHO,CADkB;AAM3BE,IAAAA,WAAW,EAAE,MANc;AAO3BC,IAAAA,QAAQ,EAAE,IAPiB;AAQ3BC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,CAAC,EAAE;AAAL,KARmB;AAS3BC,IAAAA,IAAI,EAAE,QATqB;AAU3BC,IAAAA,MAAM,EAAE;AAVmB,GAA7B;AAYA,SACE;AAAO,IAAA,OAAO,EAAEZ;AAAhB,KAA6BC,GAA7B;AAAkC,IAAA,UAAU,EAAEF,IAAI,IAAIA,IAAI,CAACc;AAA3D,KADF;AAGD,CA/BD;;eAiCe,oBAAM;AACnB,SACE,6BAAC,0BAAD;AACE,IAAA,MAAM,EACJ,IAAIC,yBAAJ,CAAiB;AACfC,MAAAA,OAAO,EAAE,IADM;AAEfC,MAAAA,kBAAkB,EAAE,GAFL;AAGfC,MAAAA,KAAK,EAAE,IAAIC,0BAAJ,EAHQ;AAIfC,MAAAA,IAAI,EAAE,IAAIC,qBAAJ,CAAa;AACjBC,QAAAA,GAAG,EAAE,+BADY;AAEjBC,QAAAA,KAAK,EAAEA;AAFU,OAAb;AAJS,KAAjB;AAFJ,KAaE,4DACE,6BAAC,GAAD,OADF,CAbF,CADF;AAmBD,C","sourcesContent":["import React, { useRef } from \"react\";\nimport { Table, ConfigProvider } from \"antd\";\nimport { TableProps } from \"antd/lib/table/Table\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\nimport { ApolloClient, InMemoryCache, HttpLink, gql as gqlo } from \"apollo-boost\";\nimport fetch from \"node-fetch\";\nimport gql from \"graphql-tag.macro\";\n\nconst q = gqlo`\n  query {\n    dataSource {\n      name\n      age\n      id\n      gender\n    }\n  }\n`;\nconsole.log(q);\nconsole.log(\n  q ===\n    gqlo`\n      query {\n        dataSource {\n          name\n          age\n          id\n          gender\n        }\n      }\n    `\n);\n\nconst App: React.FC = () => {\n  console.log('app render');\n  \n  const config = useRef({\n    query: gql`\n      query {\n        dataSource {\n          name\n          age\n          id\n          gender\n        }\n      }\n    `\n  });\n  const { data, loading } = useQuery(config.current.query);\n  const cfg: TableProps<any> = {\n    columns: [\n      { dataIndex: \"name\", title: \"姓名\", width: 2000 },\n      { dataIndex: \"age\", title: \"年龄\" },\n      { dataIndex: \"gender\", title: \"性别\", fixed: \"right\", width: 200 }\n    ],\n    tableLayout: \"auto\",\n    bordered: true,\n    scroll: { x: true },\n    size: \"middle\",\n    rowKey: \"id\"\n  };\n  return (\n    <Table loading={loading} {...cfg} dataSource={data && data.dataSource} />\n  );\n};\n\nexport default () => {\n  return (\n    <ApolloProvider\n      client={\n        new ApolloClient({\n          ssrMode: true,\n          ssrForceFetchDelay: 100,\n          cache: new InMemoryCache(),\n          link: new HttpLink({\n            uri: \"http://localhost:3030/graphql\",\n            fetch: fetch as any\n          })\n        })\n      }\n    >\n      <ConfigProvider>\n        <App />\n      </ConfigProvider>\n    </ApolloProvider>\n  );\n};\n"],"file":"App.js"}